apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "6"
    meta.helm.sh/release-name: datadog-agent
    meta.helm.sh/release-namespace: datadog
  creationTimestamp: "2020-07-09T11:00:17Z"
  generation: 6
  labels:
    app.kubernetes.io/instance: datadog-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: datadog-agent
    app.kubernetes.io/version: "7"
    helm.sh/chart: datadog-2.6.3
  name: datadog-agent
  namespace: datadog
  resourceVersion: "190862518"
  selfLink: /apis/apps/v1/namespaces/datadog/daemonsets/datadog-agent
  uid: 5fb5c88e-c1d3-11ea-8a63-4201ac100016
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: datadog-agent
  template:
    metadata:
      annotations:
        checksum/autoconf-config: xxx
        checksum/checksd-config: xxx
        checksum/clusteragent_token: xxx
        checksum/confd-config: xxx
        checksum/install_info: xxx
        container.apparmor.security.beta.kubernetes.io/system-probe: unconfined
        container.seccomp.security.alpha.kubernetes.io/system-probe: localhost/system-probe
      creationTimestamp: null
      labels:
        app: datadog-agent
      name: datadog-agent
    spec:
      affinity: {}
      containers:
      - command:
        - agent
        - run
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog-agent
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DD_SITE
          value: datadoghq.eu
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LOG_LEVEL
          value: INFO
        - name: DD_DOGSTATSD_PORT
          value: "8125"
        - name: DD_LEADER_ELECTION
          value: "true"
        - name: DD_COLLECT_KUBERNETES_EVENTS
          value: "true"
        - name: DD_APM_ENABLED
          value: "false"
        - name: DD_LOGS_ENABLED
          value: "true"
        - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
          value: "true"
        - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
          value: "true"
        - name: DD_HEALTH_PORT
          value: "5555"
        image: datadog/agent:7-jmx
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        name: agent
        ports:
        - containerPort: 8125
          name: dogstatsdport
          protocol: UDP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/datadog-agent/install_info
          name: installinfo
          readOnly: true
          subPath: install_info
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /host/var/run
          mountPropagation: None
          name: runtimesocketdir
          readOnly: true
        - mountPath: /host/proc
          mountPropagation: None
          name: procdir
          readOnly: true
        - mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          name: cgroups
          readOnly: true
        - mountPath: /opt/datadog-agent/run
          mountPropagation: None
          name: pointerdir
        - mountPath: /var/log/pods
          mountPropagation: None
          name: logpodpath
          readOnly: true
        - mountPath: /var/lib/docker/containers
          mountPropagation: None
          name: logdockercontainerpath
          readOnly: true
      - command:
        - process-agent
        - -config=/etc/datadog-agent/datadog.yaml
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog-agent
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DD_SITE
          value: datadoghq.eu
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "false"
        - name: DD_PROCESS_AGENT_ENABLED
          value: "true"
        - name: DD_LOG_LEVEL
          value: INFO
        - name: DD_SYSTEM_PROBE_ENABLED
          value: "true"
        - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
          value: "true"
        - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
          value: "false"
        image: datadog/agent:7-jmx
        imagePullPolicy: IfNotPresent
        name: process-agent
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /host/var/run
          mountPropagation: None
          name: runtimesocketdir
          readOnly: true
        - mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          name: cgroups
          readOnly: true
        - mountPath: /etc/passwd
          name: passwd
        - mountPath: /host/proc
          mountPropagation: None
          name: procdir
          readOnly: true
        - mountPath: /var/run/sysprobe
          name: sysprobe-socket-dir
          readOnly: true
        - mountPath: /etc/datadog-agent/system-probe.yaml
          name: sysprobe-config
          subPath: system-probe.yaml
      - command:
        - /opt/datadog-agent/embedded/bin/system-probe
        - --config=/etc/datadog-agent/system-probe.yaml
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog-agent
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DD_SITE
          value: datadoghq.eu
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LOG_LEVEL
          value: INFO
        image: datadog/agent:7-jmx
        imagePullPolicy: IfNotPresent
        name: system-probe
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_RESOURCE
            - SYS_PTRACE
            - NET_ADMIN
            - NET_BROADCAST
            - IPC_LOCK
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /sys/kernel/debug
          mountPropagation: None
          name: debugfs
        - mountPath: /etc/datadog-agent/system-probe.yaml
          name: sysprobe-config
          subPath: system-probe.yaml
        - mountPath: /var/run/sysprobe
          name: sysprobe-socket-dir
        - mountPath: /host/proc
          mountPropagation: None
          name: procdir
          readOnly: true
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - cp -r /etc/datadog-agent /opt
        command:
        - bash
        - -c
        image: datadog/agent:7-jmx
        imagePullPolicy: IfNotPresent
        name: init-volume
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/datadog-agent
          name: config
      - args:
        - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do
          bash $script ; done
        command:
        - bash
        - -c
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog-agent
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DD_SITE
          value: datadoghq.eu
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LEADER_ELECTION
          value: "true"
        image: datadog/agent:7-jmx
        imagePullPolicy: IfNotPresent
        name: init-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /host/proc
          mountPropagation: None
          name: procdir
          readOnly: true
        - mountPath: /host/var/run
          mountPropagation: None
          name: runtimesocketdir
          readOnly: true
        - mountPath: /etc/datadog-agent/system-probe.yaml
          name: sysprobe-config
          subPath: system-probe.yaml
      - command:
        - cp
        - /etc/config/system-probe-seccomp.json
        - /host/var/lib/kubelet/seccomp/system-probe
        image: datadog/agent:7-jmx
        imagePullPolicy: IfNotPresent
        name: seccomp-setup
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: datadog-agent-security
        - mountPath: /host/var/lib/kubelet/seccomp
          mountPropagation: None
          name: seccomp-root
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: datadog-agent
      serviceAccountName: datadog-agent
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: datadog-agent-installinfo
        name: installinfo
      - emptyDir: {}
        name: config
      - hostPath:
          path: /var/run
          type: ""
        name: runtimesocketdir
      - hostPath:
          path: /proc
          type: ""
        name: procdir
      - hostPath:
          path: /sys/fs/cgroup
          type: ""
        name: cgroups
      - emptyDir: {}
        name: s6-run
      - configMap:
          defaultMode: 420
          name: datadog-agent-system-probe-config
        name: sysprobe-config
      - configMap:
          defaultMode: 420
          name: datadog-agent-security
        name: datadog-agent-security
      - hostPath:
          path: /var/lib/kubelet/seccomp
          type: ""
        name: seccomp-root
      - hostPath:
          path: /sys/kernel/debug
          type: ""
        name: debugfs
      - emptyDir: {}
        name: sysprobe-socket-dir
      - hostPath:
          path: /etc/passwd
          type: ""
        name: passwd
      - hostPath:
          path: /var/lib/datadog-agent/logs
          type: ""
        name: pointerdir
      - hostPath:
          path: /var/log/pods
          type: ""
        name: logpodpath
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: logdockercontainerpath
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
status:
  currentNumberScheduled: 11
  desiredNumberScheduled: 11
  numberAvailable: 11
  numberMisscheduled: 0
  numberReady: 11
  observedGeneration: 6
  updatedNumberScheduled: 11
